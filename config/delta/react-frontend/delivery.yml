apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: react-frontend
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: react-frontend
    apps.tanzu.vmware.com/has-tests: "false"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: react-frontend
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: harbor.services.tanzu.rocks/labs/local-source:delta-react-frontend?sub_path=/
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        local-source-proxy.apps.tanzu.vmware.com: harbor.services.tanzu.rocks/labs/local-source:delta-react-frontend@sha256:93ca9ffcda3d1bb6c025e43d081774210991b6792c0b0fc14adaee2f72dfafdc
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: react-frontend
        apps.tanzu.vmware.com/has-tests: "false"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: react-frontend
    spec:
      containers:
      - image: harbor.services.tanzu.rocks/labs/supply-chain/react-frontend-delta@sha256:7d4ce3d30fb127036617783260ffc6f53e4674967ca5d17147f26ecd14d62135
        name: workload
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: default

